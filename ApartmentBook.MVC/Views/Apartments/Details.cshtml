@using ApartmentBook.MVC.Features.Payments.Models
@model ApartmentBook.MVC.Features.Apartments.Models.Apartment

@{
    ViewData["Title"] = "Details";
    var payments = ViewData["Payments"] as ICollection<Payment>;
    int i = 1;
}

<h1>@Model.Name</h1>

<hr />
<div class="row my-2">
    <div class="col">
        <div class="card col-xl-12 col-sm-6 mb-xl-0 mb-4">
            <ol class="list-group">
                <li class="list-group-item d-flex justify-content-between align-items-start">
                    <div class="ms-2 me-auto">
                        <div class="fw-bold">Address</div>
                        @Model.Country, @Model.City, @Model.Street @Model.Building/@Model.Flat | @Model.PostCode
                    </div>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-start">
                    <div class="ms-2 me-auto">
                        <div class="fw-bold">Value & Metrage</div>
                        @Model.Value PLN | @Model.Meterage m
                    </div>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-start">
                    <div class="ms-2 me-auto">
                        <div class="fw-bold">Rent</div>
                        @Model.Rent zł
                    </div>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-start">
                    <div class="ms-2 me-auto">
                        <div class="fw-bold">Tenant</div>
                        @Model.TenantEmail
                    </div>
                </li>
                <li class="list-group-item text-center justify-content-evenly">
                    <div class="ms-2 me-auto">
                        <a class="btn btn-primary" asp-action="RedirectToCreatePayment" asp-route-id="@Model?.Id">Create payment</a>
                        <a class="btn btn-primary" asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>
                        <a class="btn btn-primary" asp-action="Index">Back to List</a>
                    </div>
                </li>
            </ol>
        </div>
    </div>
    <div class="col">
        <div class="card col-xl-12 col-sm-6 mb-xl-0 mb-4" >
            <div class="card-body chart-container">
                <canvas id="myChart"></canvas>
            </div>
        </div>
    </div>
</div>
<div class="card col-xl-12 col-sm-12 mb-xl-0 mb-4">
    <table class="table">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Type</th>
                <th scope="col">Month</th>
                <th scope="col">Year</th>
                <th scope="col">Amount</th>
                <th scope="col">Amount Paid</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var payment in payments)
            {
                <tr class="table-@(payment.IsPaid ? "success" : "danger")">
                    <th scope="row">@i</th>
                    <td>@payment.Type</td>
                    <td>@payment.PaymentMonth</td>
                    <td>@payment.PaymentYear</td>
                    <td>@payment.Amount</td>
                    <td>@payment.AmountPaid</td>
                    <td>
                        <a asp-controller="Payments" asp-action="PayPayment" asp-route-id="@payment.Id" class="btn btn-primary">Pay</a>
                        <a asp-controller="Payments" asp-action="Details" asp-route-id="@payment.Id" class="btn btn-info">Details</a>
                        <a asp-controller="Payments" asp-action="Edit" asp-route-id="@payment.Id" class="btn btn-warning">Edit</a>
                        <a asp-controller="Payments" asp-action="Delete" asp-route-id="@payment.Id" class="btn btn-danger">Delete</a>
                    </td>
                </tr>
                i++;
            }
        </tbody>
    </table>
</div>


<script>

    const labels = [
        'Gas',
        'Energy',
        'Media',
        'Rent',
        'Others',
    ];

    const data = {
        labels: labels,
        datasets: [{
        label: `Payments this month: ${2+2} PLN`,
        data: [65, 59, 80, 81, 56, 55, 42],
        backgroundColor: [
            'rgba(255, 99, 132, 0.2)',
            'rgba(255, 159, 64, 0.2)',
            'rgba(255, 205, 86, 0.2)',
            'rgba(75, 192, 192, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(153, 102, 255, 0.2)',
            'rgba(201, 203, 207, 0.2)'
        ],
        borderColor: [
            'rgb(255, 99, 132)',
            'rgb(255, 159, 64)',
            'rgb(255, 205, 86)',
            'rgb(75, 192, 192)',
            'rgb(54, 162, 235)',
            'rgb(153, 102, 255)',
            'rgb(201, 203, 207)'
        ],
        borderWidth: 1
        }]
    };

    const config = {
        type: 'bar',
        data: data,
        options: {
        scales: {
            y: {
            beginAtZero: true
            }
        }
        },
    };

    const myChart = new Chart(
        document.getElementById('myChart'),
        config
    );

</script>

<style>
    canvas {
      width: 100%;
      height: 100%;
      display: block;
    }

    div.chart-container {
      padding: 1px;
    }
</style>
