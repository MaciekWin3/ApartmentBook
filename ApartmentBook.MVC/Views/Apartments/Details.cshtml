@using ApartmentBook.MVC.Features.Payments.Models
@model ApartmentBook.MVC.Features.Apartments.DTOs.ApartmentDTO

@{
    ViewData["Title"] = "Details";
    var payments = ViewData["Payments"] as ICollection<Payment>;
    int i = 1;
}

<h1>@Model.Name</h1>

<hr />
<div class="row my-2">
    <div class="col col-xxl-12 col-xl-12 mb-2">
        <div class="card">
            <ol class="list-group">
                <li class="list-group-item d-flex justify-content-between align-items-start">
                    <div class="ms-2 me-auto">
                        <div class="fw-bold">Address</div>
                        @Model.Country, @Model.City, @Model.Street @Model.Building/@Model.Flat | @Model.PostCode
                    </div>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-start">
                    <div class="ms-2 me-auto">
                        <div class="fw-bold">Value & Metrage</div>
                        @Model.Value PLN | @Model.Meterage m
                    </div>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-start">
                    <div class="ms-2 me-auto">
                        <div class="fw-bold">Rent</div>
                        @Model.Rent zł
                    </div>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-start">
                    <div class="ms-2 me-auto">
                        <div class="fw-bold">Tenant</div>
                        @Model.TenantEmail
                    </div>
                </li>
                <li class="list-group-item text-center justify-content-evenly">
                    <div class="ms-2 me-auto">
                        <a class="btn btn-outline-primary" asp-action="RedirectToCreatePayment" asp-route-id="@Model?.Id">Create payment</a>
                        <a class="btn btn-outline-primary" onclick="handleEmailSend()">Send email</a>
                        <a class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>
                        <a class="btn btn-outline-primary" asp-action="Index">Back to List</a>
                    </div>
                </li>
            </ol>
        </div>
    </div>

</div>
<div class="row mb-2">
    <div class="col-xxl-12 col-xl-12">
        <div class="card">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Type</th>
                        <th scope="col">Month</th>
                        <th scope="col">Year</th>
                        <th scope="col">Amount</th>
                        <th scope="col">Amount Paid</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var payment in payments)
                    {
                        <tr class="table-@(payment.IsPaid ? "success" : "danger")">
                            <th scope="row">@i</th>
                            <td>@payment.Type</td>
                            <td>@payment.PaymentMonth</td>
                            <td>@payment.PaymentYear</td>
                            <td>@payment.Amount</td>
                            <td>@payment.AmountPaid</td>
                            <td>
                                <a asp-controller="Payments" asp-action="PayPayment" asp-route-id="@payment.Id" class="btn btn-primary">Pay</a>
                                <a asp-controller="Payments" asp-action="Details" asp-route-id="@payment.Id" class="btn btn-info">Details</a>
                                <a asp-controller="Payments" asp-action="Edit" asp-route-id="@payment.Id" class="btn btn-warning">Edit</a>
                                <a asp-controller="Payments" asp-action="Delete" asp-route-id="@payment.Id" class="btn btn-danger">Delete</a>
                            </td>
                        </tr>
                        i++;
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<div class="card">
    <div id="container" style="width:100%; height:400px;"></div>
</div>

<p id="apartmentId" hidden>@Model.Id</p>


<script>
    let apartmentId = document.getElementById("apartmentId").innerHTML;
    let handleEmailSend = () => {
        fetch(`/Apartments/SendEmail/${apartmentId}`, {
            method: "POST",
        }).then(response => response.json())
    };

    let handleChartData = async () => {
        let data = await fetch(`/Apartments/GetChartData/${apartmentId}`, {
            method: "GET",
            headers: {
                "Content-Type": "application/json"
            }
        });
        let chartData = await data.json();
        return chartData;
    };


    document.addEventListener('DOMContentLoaded', async function () {
        let data = await handleChartData();
        let labels = data[0];
        let dataset = data[1];
        const chart = Highcharts.chart('container', {
            chart: {
                type: 'bar'
            },
            title: {
                text: 'Bills'
            },
            xAxis: {
                categories: labels
            },
            yAxis: {
                title: {
                    text: 'Costs'
                }
            },
            series: [{data: dataset}]
        });
    });
</script>
