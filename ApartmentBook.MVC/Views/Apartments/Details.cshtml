@using ApartmentBook.MVC.Features.Payments.Models
@model ApartmentBook.MVC.Features.Apartments.DTOs.ApartmentDTO

@{
    ViewData["Title"] = "Details";
    var payments = ViewData["Payments"] as ICollection<Payment>;
    int i = 1;
}

<h1>@Model.Name</h1>

<hr />
<div class="row my-2">
    <div class="col col-xxl-6 col-xl-12 mb-2">
        <div class="card">
            <ol class="list-group">
                <li class="list-group-item d-flex justify-content-between align-items-start">
                    <div class="ms-2 me-auto">
                        <div class="fw-bold">Address</div>
                        @Model.Country, @Model.City, @Model.Street @Model.Building/@Model.Flat | @Model.PostCode
                    </div>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-start">
                    <div class="ms-2 me-auto">
                        <div class="fw-bold">Value & Metrage</div>
                        @Model.Value PLN | @Model.Meterage m
                    </div>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-start">
                    <div class="ms-2 me-auto">
                        <div class="fw-bold">Rent</div>
                        @Model.Rent zł
                    </div>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-start">
                    <div class="ms-2 me-auto">
                        <div class="fw-bold">Tenant</div>
                        @Model.TenantEmail
                    </div>
                </li>
                <li class="list-group-item text-center justify-content-evenly">
                    <div class="ms-2 me-auto">
                        <a class="btn btn-outline-primary" asp-action="RedirectToCreatePayment" asp-route-id="@Model?.Id">Create payment</a>
                        <a class="btn btn-outline-primary" onclick="handleEmailSend()">Send email</a>
                        <a class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@Model?.Id">Edit</a>
                        <a class="btn btn-outline-primary" asp-action="Index">Back to List</a>
                    </div>
                </li>
            </ol>
        </div>
    </div>
    <div class="col col-xxl-6 col-xl-12 mb-2">
        <div class="card">
            <div class="card-body chart-container">
                <canvas style="max-height:400px" id="myChart"></canvas>
            </div>
        </div>
    </div>
</div>
<div class="row mb-2">
    <div class="card col-xl-12 col-sm-12 mb-xl-0 m-2">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Type</th>
                    <th scope="col">Month</th>
                    <th scope="col">Year</th>
                    <th scope="col">Amount</th>
                    <th scope="col">Amount Paid</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var payment in payments)
                {
                    <tr class="table-@(payment.IsPaid ? "success" : "danger")">
                        <th scope="row">@i</th>
                        <td>@payment.Type</td>
                        <td>@payment.PaymentMonth</td>
                        <td>@payment.PaymentYear</td>
                        <td>@payment.Amount</td>
                        <td>@payment.AmountPaid</td>
                        <td>
                            <a asp-controller="Payments" asp-action="PayPayment" asp-route-id="@payment.Id" class="btn btn-primary">Pay</a>
                            <a asp-controller="Payments" asp-action="Details" asp-route-id="@payment.Id" class="btn btn-info">Details</a>
                            <a asp-controller="Payments" asp-action="Edit" asp-route-id="@payment.Id" class="btn btn-warning">Edit</a>
                            <a asp-controller="Payments" asp-action="Delete" asp-route-id="@payment.Id" class="btn btn-danger">Delete</a>
                        </td>
                    </tr>
                    i++;
                }
            </tbody>
        </table>
    </div>
</div>
<p id="apartmentId" hidden>@Model.Id</p>


<script>
    let apartmentId = document.getElementById("apartmentId").innerHTML;
    let handleEmailSend = () => {
        fetch(`/Apartments/SendEmail/${apartmentId}`, {
            method: "POST",
        }).then(response => response.json())
            .then(data => console.log(data));
        console.log("Dziala");
    };
    const labels = [
        'Gas',
        'Energy',
        'Media',
        'Rent',
        'Others',
    ];

    let handleChartData = () => {
        fetch(`/Apartments/NewChart/${apartmentId}`, {
            method: "GET",
            headers: {
                "Content-Type": "application/json"
            }
        }).then(response => response.json())
            .then(data => {
                var aData = data;
                var aLabels = data[0];
                var aDatasets1 = data[1];
                console.log(aData)

                const chartData = {
                    labels: aLabels,
                    datasets: [{
                        label: `Payments this month: ${aDatasets1.reduce((partialSum, a) => partialSum + a, 0)} PLN`,
                        data: aDatasets1,
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderColor: 'rgb(255, 99, 132)',
                        borderWidth: 1
                    }]
                };

                const config = {
                    type: 'bar',
                    data: chartData,
                    options: {
                        scales: {
                            y: {
                                nAtZero: true
                            }
                        }
                    },
                };

                const myChart = new Chart(
                    document.getElementById('myChart'),
                    config
                )
            });
    };
    handleChartData();
</script>

<style>
    canvas {
        width: 100%;
        height: 100%;
        display: block;
    }

    div.chart-container {
        padding: 1px;
    }
</style>
